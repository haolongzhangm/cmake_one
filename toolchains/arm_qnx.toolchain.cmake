set(CMAKE_SYSTEM_NAME QNX)
set(CMAKE_SYSTEM_VERSION 8.0.0)
set(CMAKE_SYSTEM_PROCESSOR armv7)
set(ARM_CROSS_BUILD_ARCH armv7)
set(QNX TRUE CACHE BOOL "Targeting QNX platform")

# assert env have QNX_SDP_ROOT, QNX_TARGET, QNX_HOST
if(NOT DEFINED ENV{QNX_SDP_ROOT})
    message(FATAL_ERROR "Environment variable QNX_SDP_ROOT is not set.")
endif()
if(NOT DEFINED ENV{QNX_TARGET})
    message(FATAL_ERROR "Environment variable QNX_TARGET is not set.")
endif()
if(NOT DEFINED ENV{QNX_HOST})
    message(FATAL_ERROR "Environment variable QNX_HOST is not set.")
endif()

set(QNX_SDP_ROOT $ENV{QNX_SDP_ROOT})
set(QNX_TARGET $ENV{QNX_TARGET})
set(QNX_HOST $ENV{QNX_HOST})

set(CMAKE_C_COMPILER ${QNX_HOST}/usr/bin/qcc)
set(CMAKE_CXX_COMPILER ${QNX_HOST}/usr/bin/q++)

set(CMAKE_C_COMPILER_TARGET gcc_ntoarmv7le)
set(CMAKE_CXX_COMPILER_TARGET gcc_ntoarmv7le)
set(CMAKE_ASM_COMPILER_TARGET gcc_ntoarmv7le)
set(CMAKE_STRIP ${QNX_HOST}/usr/bin/ntoarmv7le-strip)
set(CMAKE_AR ${QNX_HOST}/usr/bin/ntoarmv7le-ar)
set(CMAKE_RANLIB ${QNX_HOST}/usr/bin/ntoarmv7le-ranlib)
set(CMAKE_LINKER ${QNX_HOST}/usr/bin/ntoarmv7le-ld)
set(CMAKE_NM ${QNX_HOST}/usr/bin/ntoarmv7le-nm)
set(CMAKE_OBJCOPY ${QNX_HOST}/usr/bin/ntoarmv7le-objcopy)
set(CMAKE_OBJDUMP ${QNX_HOST}/usr/bin/ntoarmv7le-objdump)
if(NOT EXISTS ${CMAKE_STRIP})
    message(FATAL_ERROR "CMAKE_STRIP not found: ${CMAKE_STRIP}")
endif()
if(NOT EXISTS ${CMAKE_AR})
    message(FATAL_ERROR "CMAKE_AR not found: ${CMAKE_AR}")
endif()
if(NOT EXISTS ${CMAKE_RANLIB})
    message(FATAL_ERROR "CMAKE_RANLIB not found: ${CMAKE_RANLIB}")
endif()
if(NOT EXISTS ${CMAKE_LINKER})
    message(FATAL_ERROR "CMAKE_LINKER not found: ${CMAKE_LINKER}")
endif()
if(NOT EXISTS ${CMAKE_NM})
    message(FATAL_ERROR "CMAKE_NM not found: ${CMAKE_NM}")
endif()
if(NOT EXISTS ${CMAKE_OBJCOPY})
    message(FATAL_ERROR "CMAKE_OBJCOPY not found: ${CMAKE_OBJCOPY}")
endif()
if(NOT EXISTS ${CMAKE_OBJDUMP})
    message(FATAL_ERROR "CMAKE_OBJDUMP not found: ${CMAKE_OBJDUMP}")
endif()

set(CMAKE_C_FLAGS "-V${CMAKE_C_COMPILER_TARGET} -g" CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS "-V${CMAKE_CXX_COMPILER_TARGET} -g" CACHE STRING "" FORCE)

set(CMAKE_SYSROOT ${QNX_TARGET})
set(CMAKE_FIND_ROOT_PATH ${QNX_TARGET})

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
